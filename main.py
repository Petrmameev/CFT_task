from creat import create_all_table
from insert_data import insert_data
from depozit_without_credit import depozit_without_credit
from mean_activiti_in_day import mean_activiti_in_day
from operation_in_last_month import operation_in_last_month
from normalization import normalization
from kill_credit_but_use_it import kill_credit_but_use_it
from close_credit import close_credit
from close_possibility_opening import close_possibility_opening
from max_debet_operation import max_debet_operation


if __name__ == "__main__":
    ###Подготовьте DDL-скрипты создания объектов для приведённой модели: создание таблиц, первичных, уникальных, внешних ключей и т.д.
    create_all_table()

    ###Подготовьте скрипты заполнения таблиц тестовыми данными, достаточными для выполнения заданий ниже.
    insert_data()

    ###Сформируйте отчет, который содержит все счета, относящиеся к продуктам типа ДЕПОЗИТ, принадлежащих клиентам, у которых нет открытых продуктов типа КРЕДИТ.
    depozit_without_credit()

    ###Сформируйте выборку, который содержит средние движения по счетам в рамках одного произвольного дня, в разрезе типа продукта.
    mean_activiti_in_day("2017-08-01")

    ###Сформируйте выборку, в который попадут клиенты, у которых были операции по счетам за прошедший месяц от текущей даты. Выведите клиента и сумму операций за день в разрезе даты.
    operation_in_last_month()

    ###В результате сбоя в базе данных разъехалась информация между остатками и операциями по счетам. Напишите нормализацию (процедуру выравнивающую данные), которая найдет такие счета и восстановит остатки по счету.
    normalization()

    ###Сформируйте выборку, который содержит информацию о клиентах, которые полностью погасили кредит, но при этом не закрыли продукт и пользуются им дальше (по продукту есть операция новой выдачи кредита).
    kill_credit_but_use_it()

    ###Закройте продукты (установите дату закрытия равную текущей) типа КРЕДИТ, у которых произошло полное погашение, но при этом не было повторной выдачи.
    close_credit()

    ###Закройте возможность открытия (установите дату окончания действия) для типов продуктов, по счетам продуктов которых, не было движений более одного месяца.
    close_possibility_opening()

    ###В модель данных добавьте сумму договора по продукту. Заполните поле для всех продуктов суммой максимальной дебетовой операции по счету для продукта типа КРЕДИТ, и суммой максимальной кредитовой операции по счету продукта для продукта типа ДЕПОЗИТ или КАРТА.
    max_debet_operation()
